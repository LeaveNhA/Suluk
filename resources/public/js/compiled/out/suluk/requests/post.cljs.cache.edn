{:rename-macros {}, :renames {}, :use-macros {}, :excludes #{}, :name suluk.requests.post, :imports nil, :requires {cs suluk.constants.constants, suluk.constants.constants suluk.constants.constants, t suluk.requests.type, suluk.requests.type suluk.requests.type}, :cljs.spec/speced-vars [], :uses nil, :defs {assoc-post-method-type {:protocol-inline nil, :meta {:file "/Users/sckn/projects/open-source/suluk/src/suluk/requests/post.cljs", :line 5, :column 7, :end-line 5, :end-column 29, :arglists (quote ([req]))}, :name suluk.requests.post/assoc-post-method-type, :variadic false, :file "src/suluk/requests/post.cljs", :end-column 29, :method-params ([req]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 5, :end-line 5, :max-fixed-arity 1, :fn-var true, :arglists (quote ([req]))}, post {:protocol-inline nil, :meta {:file "/Users/sckn/projects/open-source/suluk/src/suluk/requests/post.cljs", :line 8, :column 7, :end-line 8, :end-column 11, :arglists (quote ([url & prop?-function-map?])), :top-fn {:variadic true, :max-fixed-arity 1, :method-params [(url prop?-function-map?)], :arglists ([url & prop?-function-map?]), :arglists-meta (nil)}}, :name suluk.requests.post/post, :variadic true, :file "src/suluk/requests/post.cljs", :end-column 11, :top-fn {:variadic true, :max-fixed-arity 1, :method-params [(url prop?-function-map?)], :arglists ([url & prop?-function-map?]), :arglists-meta (nil)}, :method-params [(url prop?-function-map?)], :protocol-impl nil, :arglists-meta (nil), :column 1, :line 8, :end-line 8, :max-fixed-arity 1, :fn-var true, :arglists ([url & prop?-function-map?])}, post-json {:protocol-inline nil, :meta {:file "/Users/sckn/projects/open-source/suluk/src/suluk/requests/post.cljs", :line 15, :column 7, :end-line 15, :end-column 16, :arglists (quote ([url & prop?-function-map?])), :top-fn {:variadic true, :max-fixed-arity 1, :method-params [(url prop?-function-map?)], :arglists ([url & prop?-function-map?]), :arglists-meta (nil)}}, :name suluk.requests.post/post-json, :variadic true, :file "src/suluk/requests/post.cljs", :end-column 16, :top-fn {:variadic true, :max-fixed-arity 1, :method-params [(url prop?-function-map?)], :arglists ([url & prop?-function-map?]), :arglists-meta (nil)}, :method-params [(url prop?-function-map?)], :protocol-impl nil, :arglists-meta (nil), :column 1, :line 15, :end-line 15, :max-fixed-arity 1, :fn-var true, :arglists ([url & prop?-function-map?])}}, :cljs.spec/registry-ref [], :require-macros nil, :cljs.analyzer/constants {:seen #{:method :prop :post :json}, :order [:prop :method :post :json]}, :doc nil}